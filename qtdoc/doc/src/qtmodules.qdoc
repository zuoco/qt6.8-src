// Copyright (C) 2021 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GFDL-1.3-no-invariants-only

/*!
    \page qtmodules.html
    \title All Modules
    \brief A list of all modules in Qt 6.

    \ingroup classlists

    \brief Qt consists of essential modules, add-on modules, and tools.

    \section1 Qt Essentials

    Qt Essentials define the foundation of Qt on all platforms. They are
    available on all supported development platforms and on the tested target
    platforms. Except the testing modules, which will remain source compatible,
    these modules will remain source and binary compatible throughout Qt 6.

    Essential modules are general and useful for a majority of Qt applications.
    A module that is used for a special purpose is considered an add-on module
    even if it is available on all supported platforms.

//! [essentials]
    \grid
        \griditem {qtcore-index.html}{Qt Core} {
            Core non-graphical classes used by other modules.
        }
        \griditem {qtdbus-index.html}{Qt D-Bus} {
            Classes for inter-process communication over the D-Bus protocol.
        }
        \griditem {qtgui-index.html}{Qt GUI} {
            Base classes for graphical user interface (GUI) components.
        }
        \griditem {qtnetwork-index.html}{Qt Network} {
            Classes to make network programming easier and more portable.
        }
        \griditem {qtqml-index.html}{Qt Qml} {
            Classes for QML and JavaScript languages.
        }
        \griditem {qtquick-index.html}{Qt Quick} {
            A declarative framework for building highly dynamic applications
            with custom UIs.
        }
        \griditem {qtquickcontrols-index.html}{Qt Quick Controls} {
            Lightweight QML types for creating performant user interfaces for
            desktop, embedded, and mobile devices.
        }
        \griditem {qtquickdialogs-index.html}{Qt Quick Dialogs} {
            Types for creating and interacting with system dialogs from a Qt
            Quick application.
        }
        \griditem {qtquicklayouts-index.html}{Qt Quick Layouts} {
            Layouts are items that are used to arrange Qt Quick 2 based items
            in the user interface.
        }
        \griditem {qtquicktest-index.html}{Qt Quick Test} {
            A unit test framework for QML applications, where the test cases
            are written as JavaScript functions.
        }
        \griditem {qttest-index.html}{Qt Test} {
            Classes for unit testing Qt applications and libraries.
        }
        \griditem {qtwidgets-index.html}{Qt Widgets} {
            Classes to extend Qt GUI with C++ widgets.
        }
    \endgrid
//! [essentials]

    \note The binary compatibility guarantee does not apply to \l {Qt Test} and
          \l {Qt Quick Test} modules. However, they will remain source compatible.

    \section1 Qt Add-Ons

    \e{Qt Add-On} modules bring additional value for specific purposes. These
    modules may only be available on some development platform. Many add-on
    modules are either feature-complete and exist for backwards compatibility,
    or are only applicable to certain platforms. Each add-on module specifies
    its compatibility promise separately.

    The Qt installers include the option of downloading the add-ons. For more
    information, visit the \l{Getting Started with Qt} page.

//! [addons]
    \grid
        \griditem {activeqt-index.html}{Active Qt} {
            Classes for applications which use ActiveX and COM (Windows only).
        }

        \griditem {qtbluetooth-index.html}{Qt Bluetooth} {
            Provides access to Bluetooth hardware.
        }

        \griditem {qtcharts-index.html}{Qt Charts} {
            UI Components for displaying visually pleasing charts,
            driven by static or dynamic data models.
        }

        \griditem {qtcoap-index.html}{Qt CoAP} {
            Implements the client side of CoAP defined by RFC 7252.
        }

        \griditem {qtconcurrent-index.html}{Qt Concurrent} {
            Classes for writing multi-threaded programs without using low-level
            threading primitives.
        }

        \griditem {qtdatavisualization-index.html}{Qt Data Visualization} {
            UI Components for creating stunning 3D data visualizations.
        }

        \griditem {qtgraphs-index.html}{Qt Graphs} {
            Provides functionality for visualizing data in 3D as bar, scatter, and
            surface graphs, as well as 2D in area, bar, donut, line, pie, scatter, and
            spline graphs.
        }
        \griditem {qtgrpc-index.html}{Qt GRPC} {
            Provides an ability to generate Qt-based classes from protobuf specifications
            used to communicate with gRPC® services.
        }
        \griditem {qthelp-index.html}{Qt Help} {
            Classes for integrating documentation into applications.
        }
        \griditem {qthttpserver-index.html}{Qt HTTP Server} {
            A framework for embedding an HTTP server into a Qt application.
        }
        \griditem {qtimageformats-index.html}{Qt Image Formats} {
            Plugins for additional image formats: TIFF, MNG, TGA, WBMP.
        }
        \griditem {qtlottieanimation-index.html}{Qt Lottie Animation} {
            A QML API for rendering graphics and animations in JSON format,
            exported by the Bodymovin plugin for Adobe® After Effects.
        }
        \griditem {qtmqtt-index.html}{Qt MQTT} {
            Provides an implementation of the MQTT protocol specification.
        }
        \griditem {qtmultimedia-index.html}{Qt Multimedia} {
            A rich set of QML types and C++ classes to handle multimedia content.
            Also includes APIs to handle camera access.
        }
        \griditem {qtnetworkauth-index.html}{Qt Network Authorization} {
            Provides support for OAuth-based authorization to online services.
        }
        \griditem {qtnfc-index.html}{Qt NFC} {
            Provides access to Near-Field communication (NFC) hardware. On desktop
            platforms NDEF access is only supported for Type 4 tags.
        }
        \griditem {qtopcua-index.html}{Qt OPC UA} {
            Protocol for data modeling and exchange of data in industrial
            applications.
        }
        \griditem {qtopengl-index.html}{Qt OpenGL} {
            C++ classes that make it easy to use OpenGL in Qt applications.
            A separate library (Qt OpenGL Widgets) provides a widget for
            rendering OpenGL graphics.
        }
        \griditem {qtpositioning-index.html}{Qt Positioning} {
            Provides access to position, satellite info and area monitoring classes.
        }
        \griditem {qtprintsupport-index.html}{Qt Print Support} {
            Classes to make printing easier and more portable.
        }
        \griditem {qtprotobuf-index.html}{Qt Protobuf} {
            Provides an ability to generate Qt-based classes from protobuf specifications.
        }
        \griditem {qtquick3d-index.html}{Qt Quick 3D} {
            Provides a high-level API for creating 3D content or UIs based on
            Qt Quick.
        }
        \griditem {qtquick3dphysics-index.html}{Qt Quick 3D Physics} {
            Qt Quick 3D Physics provides a high-level QML module adding physical
            simulation capabilities to Qt Quick 3D.
        }
        \griditem {qtquickwidgets-index.html}{Qt Quick Widgets} {
            Provides a C++ widget class for displaying a Qt Quick user interface.
        }
        \griditem {qtquick-effects-qmlmodule.html}{Qt Quick Effects} {
            Provides QML types for applying one or more simple graphical effects to
            Qt Quick items.
        }
        \griditem {qtquick-particles-qmlmodule.html}{Qt Quick Particles} {
            Provides QML types for particle effects.
        }
        \griditem {qtquicktimeline-index.html}{Qt Quick Timeline} {
            Enables keyframe-based animations and parameterization.
        }
        \griditem {qtremoteobjects-index.html}{Qt Remote Objects} {
            Provides an easy to use mechanism for sharing a QObject's API
            (Properties/Signals/Slots) between processes or devices.
        }
        \griditem {qtscxml-index.html}{Qt SCXML} {
            Provides classes and tools for creating state machines from SCXML files and
            embedding them in applications.
        }
        \griditem {qtsensors-index.html}{Qt Sensors} {
            Provides access to sensor hardware on Android, iOS, and Windows platforms.
        }
        \griditem {qtserialbus-index.html}{Qt Serial Bus} {
            Provides access to serial industrial bus interfaces. Currently, the module
            supports the CAN bus and Modbus protocols.
        }
        \griditem {qtserialport-index.html}{Qt Serial Port} {
            Provides classes to interact with hardware and virtual serial ports.
        }
        \griditem {qtshadertools-index.html}{Qt Shader Tools} {
            Provides tools for the cross-platform Qt shader pipeline. These enable
            processing graphics and compute shaders to make them usable for Qt Quick and other
            components in the Qt ecosystem.
        }
        \griditem {qtspatialaudio-index.html}{Qt Spatial Audio} {
            Provides support for spatial audio. Create sound scenes in 3D space containing different
            sound sources and room related properties such as reverb.
        }
        \griditem {qtsql-index.html}{Qt SQL} {
            Classes for database integration using SQL.
        }
        \griditem {qtstatemachine-index.html}{Qt State Machine} {
            Provides classes for creating and executing state graphs.
        }
        \griditem {qtsvg-index.html}{Qt SVG} {
            Classes for displaying the contents of SVG files. Supports a subset of the
            SVG 1.2 Tiny standard. A separate library (Qt SVG Widgets) provides support
            for rendering SVG files in a widget UI.
        }
        \griditem {qttexttospeech-index.html}{Qt TextToSpeech} {
            Provides support for synthesizing speech from text and playing it as audio
            output.
        }
        \griditem {qtuitools-index.html}{Qt UI Tools} {
            Classes for loading QWidget based forms created in \QD dynamically, at runtime.
        }
        \griditem {qtvirtualkeyboard-index.html}{Qt Virtual Keyboard} {
            A framework for implementing different input methods as
            well as a QML virtual keyboard. Supports localized keyboard
            layouts and custom visual themes.
        }
        \griditem {qtwaylandcompositor-index.html}{Qt Wayland Compositor} {
            Provides a framework to develop a Wayland compositor on Linux
            and Boot to Qt targets.
        }
        \griditem {qtwebchannel-index.html}{Qt WebChannel} {
            Provides access to QObject or QML objects from HTML clients for seamless
            integration of Qt applications with HTML/JavaScript clients.
        }
        \griditem {qtwebsockets-index.html}{Qt WebSockets} {
            Provides WebSocket communication compliant with RFC 6455.
        }
        \griditem {qtwebview-index.html}{Qt WebView} {
            Displays web content in a QML application by using APIs native to the platform,
             without the need to include a full web browser stack.
        }
        \griditem {qtxml-index.html}{Qt XML} {
            Handling of XML in a Document Object Model (DOM) API.
        }
        \griditem {qtgraphicaleffects5-index.html}{Qt 5 Compatibility APIs: Graphical Effects} {
            Qt Graphical Effects module from Qt 5 provided for compatibility.
        }
        \griditem {qtcore5-index.html}{Qt 5 Core Compatibility APIs} {
            Qt Core APIs that were in Qt 5 but not Qt 6.
        }
    \endgrid
//! [addons]

    \section1 Qt Add-Ons in Technical Preview

    The following add-ons are still in development, but are available as technology previews:

//! [techpreview-addons]
    \grid
        \griditem {qtlocation-index.html}{Qt Location} {
            Provides QML and C++ interfaces to create location-aware applications.
        }
    \endgrid
//! [techpreview-addons]

    \section1 Qt Extension Modules

    Qt Extension Modules bring additional functionality to Qt. They may be part
    of a given Qt release, but can deviate from the other Qt modules in terms of
    release schedule, platform support, the binaries Qt provides, commercial
    support, or compatibility promises. You can find specific details in the
    module documentation for each Extension Module.

//! [extensions]
    \grid
        \griditem {qtwebengine-index.html}{Qt WebEngine} {
            Classes and functions for embedding web content in applications using the
            Chromium browser project.
        }
        \griditem {qtpdf-index.html}{Qt PDF} {
            Classes and functions for rendering PDF documents on desktop platforms.
        }
    \endgrid
//! [extensions]

    \section1 Where to Go from Here

    We invite you to explore the rest of Qt. We prepared overviews which help
    you decide which APIs to use and our examples demonstrate how to use our
    API.

    \list
    \li \l{Qt Overviews} - list of topics about application development
    \li \l{Qt Examples and Tutorials}{Examples and Tutorials} - code samples and tutorials
    \li \l{Qt Reference Pages} - a listing of C++ and QML APIs
    \li \l{Changes to Supported Modules} - status of Qt 5 modules in Qt 6.0
    \endlist

*/
